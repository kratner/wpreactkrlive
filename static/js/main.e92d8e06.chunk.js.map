{"version":3,"sources":["components/DataAccess/GetDataWPRESTAPI.js","components/ProjectLinksList.js","components/SocialLinksList.js","components/OECodeSamplesList.js","components/MainImageGallery.js","components/CoverflowGallery.js","components/KRMonogramSVG.js","components/Copyright.js","components/BGVideoSwitch.js","components/NavBar.js","components/VideoBackground.js","App.js","serviceWorker.js","index.js"],"names":["appQueryUrl","concat","appOEQueryUrl","qryPostsFromLinksCategory","qryPostsFromPrintsCategory","qryPostsFromOEDistributionCategory","ProjectLinksList","state","posts","loadState","_this2","this","appUrl","fetch","then","data","json","setState","listProjectLinks","filter","node","acf","type","sort","a","b","weight","map","index","react_default","createElement","key","href","className","class","title","rendered","target","text","icon","id","CircularProgress","props","projectLinksTitle","Component","SocialLinksList","listSocialLinks","length","LinearProgress","OECodeSamplesList","_this3","OECodeSamples","externalLink","link","content","Fragment","Button","color","onClick","loadOECodeSamplesList","size","sectionButtonLabel","variant","codeSamplesTitle","codeSamplesExternalSiteURL","rel","codeSamplesExternalSiteTitle","codeSamplesExternalSiteName","OpenInNew_default","MainImageGallery","images","imageURL","jetpack_featured_media_url","original","originalAlt","originalTitle","thumbnail","thumbnailAlt","thumbnailTitle","description","loadMainImageGallery","galleryTitle","galleryLinkURL","galleryLinkTitle","galleryLinkText","image_gallery_default","items","thumbnailPosition","CoverflowGallery","src","alt","loadImageData","main_default","displayQuantityOfSide","navigation","enableHeading","clickable","media","@media (max-width: 900px)","width","height","@media (min-width: 900px)","KRMonogramSVG","xlinkHref","xmlns","xmlnsXlink","in","stdDeviation","dx","dy","result","floodColor","in2","operator","viewBox","points","Copyright","copyrightYear","Date","getFullYear","BGVideoSwitch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","videoURLs","switchBackgroundVideo","videoElement","videoSource","toggle","handleClick","bind","assertThisInitialized","isVisible","document","getElementsByClassName","style","visibility","toggleBGVideoSwitch","populateVideoURLArray","arr","el_video","el_source","new_random_item","Math","floor","random","setAttribute","load","videoURLArray","data-ctl","SwitchVideo_default","fontSize","NavBar","components_Copyright","components_BGVideoSwitch","VideoBackground","autoPlay","loop","muted","playsInline","App","components_VideoBackground","components_NavBar","components_KRMonogramSVG","components_CoverflowGallery","components_MainImageGallery","components_OECodeSamplesList","components_SocialLinksList","components_ProjectLinksList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e92d8e06.chunk.js","sourcesContent":["let appUrl = \"https://keithratner.live\";\n//let appUrl = 'http://krlocalwp.localhost';\n//https://optionexplicit.live/wp-json/wpcms/v1/posts-by-category/?name=distribution\nlet appOptionExplicitUrl = \"https://optionexplicit.live\";\nlet appJSONEndpoint = \"/wp-json\";\nlet appRESTAPITrunk = \"/wpcms/v1\";\nlet RESTEndpointPostsByCategory = \"/posts-by-category/\";\nexport const appQueryUrl = `${appUrl}${appJSONEndpoint}${appRESTAPITrunk}${RESTEndpointPostsByCategory}?`;\nexport const appOEQueryUrl = `${appOptionExplicitUrl}${appJSONEndpoint}${appRESTAPITrunk}${RESTEndpointPostsByCategory}?`;\nexport const qryPostsFromLinksCategory = `${appQueryUrl}name=links`;\nexport const qryPostsFromPrintsCategory = `${appQueryUrl}name=prints`;\nexport const qryPostsFromOEDistributionCategory = `${appOEQueryUrl}name=distribution`;\n\n//https://keithratner.live/wp-json/wpcms/v1/posts-by-category?name=prints\n","import React, { Component } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { qryPostsFromLinksCategory } from \"./DataAccess/GetDataWPRESTAPI\";\n\nclass ProjectLinksList extends Component {\n  state = {\n    posts: [],\n    loadState: \"loading\"\n  };\n\n  componentDidMount() {\n    let appUrl = `${qryPostsFromLinksCategory}`;\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          posts: data,\n          loadState: \"loaded\"\n        });\n      });\n  }\n\n  render() {\n    let listProjectLinks = this.state.posts\n      .filter(node => node.acf.type === \"project\")\n      .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map((node, index) => {\n        return (\n          <li key={index}>\n            <a\n              href={node.acf.href}\n              className={node.acf.class}\n              title={node.title.rendered}\n              target={node.acf.target}\n            >\n              {node.acf.text}\n              <span className={\"icon-\" + node.acf.icon + \" inline-icon\"} />\n            </a>\n          </li>\n        );\n      });\n    switch (this.state.loadState) {\n      case \"loading\":\n        return (\n          <div id=\"project-links-container\">\n            <CircularProgress className=\"progress\" />\n          </div>\n        );\n      case \"loaded\":\n        return (\n          <div id=\"project-links-container\">\n            <h3>{this.props.projectLinksTitle}</h3>\n            <ul>{listProjectLinks}</ul>\n          </div>\n        );\n      default:\n    }\n  }\n}\n\nexport default ProjectLinksList;\n","import React, { Component } from \"react\";\nimport { qryPostsFromLinksCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nclass SocialLinksList extends Component {\n  state = {\n    posts: []\n  };\n\n  componentDidMount() {\n    let appUrl = `${qryPostsFromLinksCategory}`;\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          posts: data\n        });\n      });\n  }\n\n  render() {\n    let listSocialLinks = this.state.posts\n      .filter(node => node.acf.type === \"social\")\n      .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map((node, index) => {\n        return (\n          <li key={index}>\n            <a\n              href={node.acf.href}\n              className={node.acf.class}\n              title={node.title.rendered}\n              target={node.acf.target}\n            >\n              {node.acf.text}\n              <span className={\"icon-\" + node.acf.icon} />\n            </a>\n          </li>\n        );\n      });\n\n    return (\n      <div className=\"social-links\" id=\"social-links-container\">\n        {listSocialLinks.length === 0 ? (\n          <LinearProgress className=\"progress\" />\n        ) : (\n          <ul>{listSocialLinks}</ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SocialLinksList;\n","import React, { Component } from \"react\";\nimport { qryPostsFromOEDistributionCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nclass OECodeSamplesList extends Component {\n  state = {\n    posts: [],\n    loadState: \"inactive\"\n  };\n\n  loadOECodeSamplesList() {\n    let appUrl = `${qryPostsFromOEDistributionCategory}`;\n    this.setState({\n      loadState: \"loading\"\n    });\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          posts: data,\n          loadState: \"loaded\"\n        });\n      });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let OECodeSamples = this.state.posts\n      /*\n      .filter(node => node.acf.type === 'project')\n      .sort((a, b) =>\n        a.acf.weight > b.acf.weight ? 1 : -1\n      )\n      */\n      .map((node, index) => {\n        let title = node.title;\n        let externalLink = node.link;\n        let content = node.content.rendered;\n        return {\n          title: title,\n          externalLink: externalLink,\n          content: content\n        };\n      });\n    switch (this.state.loadState) {\n      case \"inactive\":\n        return (\n          <div id=\"oe-code-samples-container\">\n            <React.Fragment>\n              <Button\n                className=\"button-standard\"\n                color=\"primary\"\n                onClick={() => {\n                  this.loadOECodeSamplesList();\n                }}\n                size=\"large\"\n                title={this.props.sectionButtonLabel}\n                variant=\"contained\"\n              >\n                {this.props.sectionButtonLabel}\n              </Button>\n            </React.Fragment>\n          </div>\n        );\n      case \"loading\":\n        return (\n          <div id=\"oe-code-samples-container\">\n            <React.Fragment>\n              <CircularProgress className=\"progress\" />\n            </React.Fragment>\n          </div>\n        );\n      case \"loaded\":\n        /* content, externalLink, title */\n        return (\n          <div id=\"oe-code-samples-container\">\n            <React.Fragment>\n              <h3>{this.props.codeSamplesTitle}</h3>\n              <p>\n                <a\n                  href={this.props.codeSamplesExternalSiteURL}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  title={this.props.codeSamplesExternalSiteTitle}\n                >\n                  {this.props.codeSamplesExternalSiteName} <OpenInNewIcon />\n                </a>\n              </p>\n              <p>Coming Soon: {OECodeSamples.length} VBA Procedures</p>\n            </React.Fragment>\n          </div>\n        );\n      default:\n    }\n  }\n}\n\nexport default OECodeSamplesList;\n","import React, { Component } from \"react\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { qryPostsFromPrintsCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport ImageGallery from \"react-image-gallery\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nclass MainImageGallery extends Component {\n  state = {\n    images: [],\n    loadState: \"inactive\"\n  };\n\n  loadMainImageGallery() {\n    let appUrl = `${qryPostsFromPrintsCategory}`;\n    this.setState({\n      loadState: \"loading\"\n    });\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          images: data,\n          loadState: \"loaded\"\n        });\n      });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let images = this.state.images\n      // .filter(node => node.acf.type === \"social\")\n      // .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map((node, index) => {\n        let title = node.title.rendered;\n        let imageURL = node.jetpack_featured_media_url;\n        return {\n          original: imageURL,\n          originalAlt: title,\n          originalTitle: title,\n          thumbnail: imageURL,\n          thumbnailAlt: title,\n          thumbnailTitle: title,\n          description: title\n        };\n      });\n    switch (this.state.loadState) {\n      case \"inactive\":\n        return (\n          <div id=\"image-gallery-container\">\n            <React.Fragment>\n              <Button\n                className=\"button-standard\"\n                color=\"primary\"\n                onClick={() => {\n                  this.loadMainImageGallery();\n                }}\n                size=\"large\"\n                title={this.props.sectionButtonLabel}\n                variant=\"contained\"\n              >\n                {this.props.sectionButtonLabel}\n              </Button>\n            </React.Fragment>\n          </div>\n        );\n      case \"loading\":\n        return (\n          <div id=\"image-gallery-container\">\n            <CircularProgress className=\"progress\" />\n          </div>\n        );\n      case \"loaded\":\n        return (\n          <div id=\"image-gallery-container\">\n            <React.Fragment>\n              <h3>{this.props.galleryTitle}</h3>\n              <p>\n                <a\n                  href={this.props.galleryLinkURL}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  title={this.props.galleryLinkTitle}\n                >\n                  {this.props.galleryLinkText} <OpenInNewIcon />\n                </a>\n              </p>\n              <ImageGallery\n                className=\"image-gallery\"\n                items={images}\n                thumbnailPosition={this.props.thumbnailPosition}\n              />\n            </React.Fragment>\n          </div>\n        );\n      default:\n    }\n  }\n}\n\nexport default MainImageGallery;\n","import React, { Component } from \"react\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { qryPostsFromPrintsCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport Coverflow from \"react-coverflow\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nclass CoverflowGallery extends Component {\n  state = {\n    images: [],\n    loadState: \"inactive\"\n  };\n\n  loadImageData() {\n    let appUrl = `${qryPostsFromPrintsCategory}`;\n    this.setState({\n      loadState: \"loading\"\n    });\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          images: data,\n          loadState: \"loaded\"\n        });\n      });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let images = this.state.images\n      // .filter(node => node.acf.type === \"social\")\n      // .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map(node => {\n        let title = node.title.rendered;\n        let imageURL = node.jetpack_featured_media_url;\n        return <img src={imageURL} alt={title} />;\n      });\n    // <img src='images/album-1.png' alt='Album one' data-action=\"https://facebook.github.io/react/\"/>\n    switch (this.state.loadState) {\n      case \"inactive\":\n        return (\n          <div id=\"coverflow-gallery-container\">\n            <React.Fragment>\n              <Button\n                className=\"button-standard\"\n                color=\"primary\"\n                onClick={() => {\n                  this.loadImageData();\n                }}\n                size=\"large\"\n                title={this.props.sectionButtonLabel}\n                variant=\"contained\"\n              >\n                {this.props.sectionButtonLabel}\n              </Button>\n            </React.Fragment>\n          </div>\n        );\n      case \"loading\":\n        return (\n          <div id=\"coverflow-gallery-container\">\n            <CircularProgress className=\"progress\" />\n          </div>\n        );\n      case \"loaded\":\n        return (\n          <div id=\"coverflow-gallery-container\">\n            <React.Fragment>\n              <h3>{this.props.galleryTitle}</h3>\n              <p>\n                <a\n                  href={this.props.galleryLinkURL}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  title={this.props.galleryLinkTitle}\n                >\n                  {this.props.galleryLinkText} <OpenInNewIcon />\n                </a>\n              </p>\n              <Coverflow\n                displayQuantityOfSide={2}\n                navigation={true}\n                enableHeading={true}\n                clickable={true}\n                media={{\n                  \"@media (max-width: 900px)\": {\n                    width: \"600px\",\n                    height: \"300px\"\n                  },\n                  \"@media (min-width: 900px)\": {\n                    width: \"960px\",\n                    height: \"600px\"\n                  }\n                }}\n                className=\"coverflow-gallery\"\n              >\n                {images}\n              </Coverflow>\n            </React.Fragment>\n          </div>\n        );\n      default:\n    }\n  }\n}\n\nexport default CoverflowGallery;\n","import React, { Component } from 'react';\n\nclass KRMonogramSVG extends Component {\n  render() {\n    return (\n      <div className=\"kr-monogram__parent\">\n        <div className=\"kr-monogram\">\n          <svg className=\"icon\">\n            <use\n              className=\"sprite__monogram\"\n              xlinkHref=\"#monogram\"\n            />\n          </svg>\n        </div>\n        <div className=\"svg-sprites\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <filter id=\"drop-shadow\">\n                <feGaussianBlur\n                  in=\"SourceAlpha\"\n                  stdDeviation=\"1\"\n                />\n                <feOffset\n                  dx=\"1\"\n                  dy=\"1\"\n                  result=\"offsetblur\"\n                />\n                <feFlood floodColor=\"rgba(0,0,0,1)\" />\n                <feComposite\n                  in2=\"offsetblur\"\n                  operator=\"in\"\n                />\n                <feMerge>\n                  <feMergeNode />\n                  <feMergeNode in=\"SourceGraphic\" />\n                </feMerge>\n              </filter>\n\n              <symbol\n                id=\"monogram\"\n                viewBox=\"560 1790 200 200\"\n              >\n                <polygon\n                  id=\"glyph_x5F__x5F_right\"\n                  points=\"674.331,1891.881 746,1939.049 682.765,1891.277\n                711.96,1859.64 657.285,1862.205 698.104,1864.282 \"\n                />\n                <polygon\n                  id=\"glyph_x5F__x5F_middle\"\n                  points=\"693.824,1963.297\n                638.749,1861.327 693.824,1804.035 649.28,1861.851 \"\n                />\n                <polygon\n                  id=\"glyph_x5F__x5F_left\"\n                  points=\"600.744,1977.16\n                660.771,1913.468 591.762,1860.794 631.498,1860.705\n                574.999,1858.154 653.576,1915.606 \"\n                />\n              </symbol>\n            </defs>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default KRMonogramSVG;\n","import React, { Component } from 'react';\n\nclass Copyright extends Component {\n  render() {\n    let copyrightYear = (() => new Date())().getFullYear();\n    return (\n      <span className=\"copyright\">\n        &copy;{copyrightYear}\n      </span>\n    );\n  }\n}\n\nexport default Copyright;\n","import React, { Component } from \"react\";\nimport { qryPostsFromLinksCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport SwitchVideoIcon from \"@material-ui/icons/SwitchVideo\";\n\nclass BGVideoSwitch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.state.switchBackgroundVideo(\n      this.state.videoURLs,\n      this.state.videoElement,\n      this.state.videoSource\n    );\n  }\n  toggleBGVideoSwitch(isVisible) {\n    document.getElementsByClassName(\n      \"ctl__bgvideoswitch\"\n    )[0].style.visibility = isVisible ? \"visible\" : \"hidden\";\n  }\n  state = {\n    videoURLs: [],\n    switchBackgroundVideo: {},\n    videoElement: {},\n    videoSource: {}\n  };\n\n  // $('[data-ctl=bgvideoswitch]')\n\n  componentDidMount() {\n    this.toggleBGVideoSwitch(false);\n    let appUrl = `${qryPostsFromLinksCategory}`;\n    let arrVideoURLs = [\"/img/20181215_154218.mp4\"];\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.state.populateVideoURLArray(data);\n        this.state.switchBackgroundVideo(\n          this.state.videoURLs,\n          this.state.videoElement,\n          this.state.videoSource\n        );\n        this.toggleBGVideoSwitch(true);\n      });\n\n    this.setState({\n      videoURLs: arrVideoURLs,\n      videoElement: document.getElementsByClassName(\"video-background__video\"),\n      videoSource: document.getElementsByClassName(\n        \"video-background__video__source\"\n      ),\n      switchBackgroundVideo: (arr, el_video, el_source) => {\n        let new_random_item = Math.floor(Math.random() * arr.length);\n        el_source[0].setAttribute(\"src\", arr[new_random_item]);\n        el_video[0].load();\n      },\n      populateVideoURLArray: data => {\n        let videoURLArray = data\n          .filter(node => node.acf.type === \"video\")\n          .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n          .map((node, index) => {\n            return node.acf.href;\n          });\n        this.setState({\n          videoURLs: videoURLArray\n        });\n        //this.state.toggleBGVideoSwitch(true);\n      }\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <span\n          data-ctl=\"bgvideoswitch\"\n          className=\"ctl ctl__bgvideoswitch\"\n          title=\"Switch Video Background\"\n          onClick={this.handleClick}\n        >\n          <SwitchVideoIcon fontSize=\"large\" />\n        </span>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BGVideoSwitch;\n","import React, { Component } from 'react';\nimport Copyright from './Copyright';\nimport BGVideoSwitch from './BGVideoSwitch';\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className=\"nav\">\n        <Copyright />\n        <BGVideoSwitch />\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\nclass VideoBackground extends Component {\n  render() {\n    return (\n      <div className=\"video-background\">\n        <video\n          autoPlay\n          loop\n          className=\"video-background__video\"\n          muted\n          playsInline\n        >\n          <source\n            src=\"/img/20181215_154218.mp4\"\n            type=\"video/mp4\"\n            className=\"video-background__video__source\"\n          />\n        </video>\n      </div>\n    );\n  }\n}\n\nexport default VideoBackground;\n","import React, { Component } from \"react\";\nimport \"./styles/normalize.css\";\nimport \"./styles/App.scss\";\nimport ProjectLinksList from \"./components/ProjectLinksList\";\nimport SocialLinksList from \"./components/SocialLinksList\";\nimport OECodeSamplesList from \"./components/OECodeSamplesList\";\nimport MainImageGallery from \"./components/MainImageGallery\";\nimport CoverflowGallery from \"./components/CoverflowGallery\";\nimport KRMonogramSVG from \"./components/KRMonogramSVG\";\nimport NavBar from \"./components/NavBar\";\nimport VideoBackground from \"./components/VideoBackground\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoBackground />\n        <NavBar />\n        <KRMonogramSVG />\n        <div className=\"splash-container theme-light\">\n          <div className=\"front\">\n            <div className=\"brand-title\">\n              <h1>Keith Ratner</h1>\n            </div>\n            <CoverflowGallery\n              sectionButtonLabel=\"Load Coverflow Gallery\"\n              galleryTitle=\"Art Gallery\"\n              galleryLinkURL=\"https://keithratner.live/shop\"\n              galleryLinkTitle=\"Purchase Prints Online\"\n              galleryLinkText=\"Visit the Store\"\n            />\n            <MainImageGallery\n              sectionButtonLabel=\"Load Image Gallery\"\n              galleryTitle=\"Art Gallery\"\n              galleryLinkURL=\"https://keithratner.live/shop\"\n              galleryLinkTitle=\"Purchase Prints Online\"\n              galleryLinkText=\"Visit the Store\"\n              thumbnailPosition=\"left\"\n            />\n            <OECodeSamplesList\n              sectionButtonLabel=\"Load VBA Code Samples\"\n              codeSamplesTitle=\"VBA Code Samples\"\n              codeSamplesExternalSiteURL=\"https://optionexplicit.live\"\n              codeSamplesExternalSiteTitle=\"Visit Option Explicit\"\n              codeSamplesExternalSiteName=\"Option Explicit\"\n            />\n            <SocialLinksList />\n            <ProjectLinksList projectLinksTitle=\"Suggested Links\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}