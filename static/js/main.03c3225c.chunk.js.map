{"version":3,"sources":["components/DataAccess/GetDataWPRESTAPI.js","components/ProjectLinksList.js","components/SocialLinksList.js","components/MainImageGallery.js","components/KRMonogramSVG.js","components/Copyright.js","components/BGVideoSwitch.js","components/NavBar.js","components/VideoBackground.js","App.js","serviceWorker.js","index.js"],"names":["appQueryUrl","concat","qryPostsFromLinksCategory","qryPostsFromPrintsCategory","ProjectLinksList","state","posts","_this2","this","appUrl","fetch","then","data","json","setState","listProjectLinks","filter","node","acf","type","sort","a","b","weight","map","index","react_default","createElement","key","href","className","class","title","rendered","target","text","icon","id","length","LinearProgress","Component","SocialLinksList","listSocialLinks","MainImageGallery","images","imageURL","jetpack_featured_media_url","original","originalAlt","originalTitle","thumbnail","thumbnailAlt","thumbnailTitle","description","CircularProgress","props","galleryTitle","galleryDescription","image_gallery_default","items","thumbnailPosition","KRMonogramSVG","xlinkHref","xmlns","xmlnsXlink","in","stdDeviation","dx","dy","result","floodColor","in2","operator","viewBox","points","Copyright","copyrightYear","Date","getFullYear","BGVideoSwitch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","videoURLs","switchBackgroundVideo","videoElement","videoSource","toggle","handleClick","bind","assertThisInitialized","isVisible","document","getElementsByClassName","style","visibility","toggleBGVideoSwitch","populateVideoURLArray","arr","el_video","el_source","new_random_item","Math","floor","random","setAttribute","load","videoURLArray","data-ctl","onClick","NavBar","components_Copyright","components_BGVideoSwitch","VideoBackground","autoPlay","loop","muted","playsInline","src","App","components_VideoBackground","components_NavBar","components_KRMonogramSVG","components_ProjectLinksList","components_MainImageGallery","components_SocialLinksList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03c3225c.chunk.js","sourcesContent":["let appUrl = \"https://keithratner.live\";\n//let appUrl = 'http://krlocalwp.localhost';\nlet appJSONEndpoint = \"/wp-json\";\nlet appRESTAPITrunk = \"/wpcms/v1\";\nlet RESTEndpointPostsByCategory = \"/posts-by-category/\";\nexport const appQueryUrl = `${appUrl}${appJSONEndpoint}${appRESTAPITrunk}${RESTEndpointPostsByCategory}?`;\nexport const qryPostsFromLinksCategory = `${appQueryUrl}name=links`;\nexport const qryPostsFromPrintsCategory = `${appQueryUrl}name=prints`;\n\n//https://keithratner.live/wp-json/wpcms/v1/posts-by-category?name=prints\n","import React, { Component } from \"react\";\nimport { qryPostsFromLinksCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nclass ProjectLinksList extends Component {\n  state = {\n    posts: []\n  };\n\n  componentDidMount() {\n    let appUrl = `${qryPostsFromLinksCategory}`;\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          posts: data\n        });\n      });\n  }\n\n  render() {\n    let listProjectLinks = this.state.posts\n      .filter(node => node.acf.type === \"project\")\n      .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map((node, index) => {\n        return (\n          <li key={index}>\n            <a\n              href={node.acf.href}\n              className={node.acf.class}\n              title={node.title.rendered}\n              target={node.acf.target}\n            >\n              {node.acf.text}\n              <span className={\"icon-\" + node.acf.icon + \" inline-icon\"} />\n            </a>\n          </li>\n        );\n      });\n    return (\n      <div id=\"project-links\">\n        <div className=\"link-padding\">\n          {listProjectLinks.length === 0 ? (\n            <LinearProgress className=\"progress\" />\n          ) : (\n            <ul>{listProjectLinks}</ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectLinksList;\n","import React, { Component } from \"react\";\nimport { qryPostsFromLinksCategory } from \"./DataAccess/GetDataWPRESTAPI\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nclass SocialLinksList extends Component {\n  state = {\n    posts: []\n  };\n\n  componentDidMount() {\n    let appUrl = `${qryPostsFromLinksCategory}`;\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          posts: data\n        });\n      });\n  }\n\n  render() {\n    let listSocialLinks = this.state.posts\n      .filter(node => node.acf.type === \"social\")\n      .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map((node, index) => {\n        return (\n          <li key={index}>\n            <a\n              href={node.acf.href}\n              className={node.acf.class}\n              title={node.title.rendered}\n              target={node.acf.target}\n            >\n              {node.acf.text}\n              <span className={\"icon-\" + node.acf.icon} />\n            </a>\n          </li>\n        );\n      });\n\n    return (\n      <div className=\"social-links\" id=\"social-links-container\">\n        {listSocialLinks.length === 0 ? (\n          <LinearProgress className=\"progress\" />\n        ) : (\n          <ul>{listSocialLinks}</ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SocialLinksList;\n","import React, { Component } from \"react\";\n//import { LinearProgress } from \"@material-ui/core\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { qryPostsFromPrintsCategory } from \"./DataAccess/GetDataWPRESTAPI\";\n// # SCSS\n\n// # CSS\n//@import \"~react-image-gallery/styles/css/image-gallery.css\";\n\n// # Stylesheet with no icons\n//node_modules/react-image-gallery/styles/scss/image-gallery-no-icon.scss\n//node_modules/react-image-gallery/styles/css/image-gallery-no-icon.css\n\nimport ImageGallery from \"react-image-gallery\";\n\nclass MainImageGallery extends Component {\n  state = {\n    images: []\n  };\n\n  componentDidMount() {\n    let appUrl = `${qryPostsFromPrintsCategory}`;\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          images: data\n        });\n      });\n  }\n\n  render() {\n    let images = this.state.images\n      // .filter(node => node.acf.type === \"social\")\n      // .sort((a, b) => (a.acf.weight > b.acf.weight ? 1 : -1))\n      .map((node, index) => {\n        let title = node.title.rendered;\n        let imageURL = node.jetpack_featured_media_url;\n        return {\n          original: imageURL,\n          originalAlt: title,\n          originalTitle: title,\n          thumbnail: imageURL,\n          thumbnailAlt: title,\n          thumbnailTitle: title,\n          description: title\n        };\n      });\n    return (\n      <div id=\"image-gallery-container\">\n        {images.length === 0 ? (\n          <div>\n            {/* <LinearProgress className=\"progress\" /> */}\n            <CircularProgress className=\"progress\" />\n          </div>\n        ) : (\n          <div>\n            <h3>{this.props.galleryTitle}</h3>\n            <p>{this.props.galleryDescription}</p>\n            <ImageGallery\n              className=\"image-gallery\"\n              items={images}\n              thumbnailPosition={this.props.thumbnailPosition}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MainImageGallery;\n","import React, { Component } from 'react';\n\nclass KRMonogramSVG extends Component {\n  render() {\n    return (\n      <div className=\"kr-monogram__parent\">\n        <div className=\"kr-monogram\">\n          <svg className=\"icon\">\n            <use\n              className=\"sprite__monogram\"\n              xlinkHref=\"#monogram\"\n            />\n          </svg>\n        </div>\n        <div className=\"svg-sprites\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <filter id=\"drop-shadow\">\n                <feGaussianBlur\n                  in=\"SourceAlpha\"\n                  stdDeviation=\"1\"\n                />\n                <feOffset\n                  dx=\"1\"\n                  dy=\"1\"\n                  result=\"offsetblur\"\n                />\n                <feFlood floodColor=\"rgba(0,0,0,1)\" />\n                <feComposite\n                  in2=\"offsetblur\"\n                  operator=\"in\"\n                />\n                <feMerge>\n                  <feMergeNode />\n                  <feMergeNode in=\"SourceGraphic\" />\n                </feMerge>\n              </filter>\n\n              <symbol\n                id=\"monogram\"\n                viewBox=\"560 1790 200 200\"\n              >\n                <polygon\n                  id=\"glyph_x5F__x5F_right\"\n                  points=\"674.331,1891.881 746,1939.049 682.765,1891.277\n                711.96,1859.64 657.285,1862.205 698.104,1864.282 \"\n                />\n                <polygon\n                  id=\"glyph_x5F__x5F_middle\"\n                  points=\"693.824,1963.297\n                638.749,1861.327 693.824,1804.035 649.28,1861.851 \"\n                />\n                <polygon\n                  id=\"glyph_x5F__x5F_left\"\n                  points=\"600.744,1977.16\n                660.771,1913.468 591.762,1860.794 631.498,1860.705\n                574.999,1858.154 653.576,1915.606 \"\n                />\n              </symbol>\n            </defs>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default KRMonogramSVG;\n","import React, { Component } from 'react';\n\nclass Copyright extends Component {\n  render() {\n    let copyrightYear = (() => new Date())().getFullYear();\n    return (\n      <span className=\"copyright\">\n        &copy;{copyrightYear}\n      </span>\n    );\n  }\n}\n\nexport default Copyright;\n","import React, { Component } from 'react';\nimport { qryPostsFromLinksCategory } from './DataAccess/GetDataWPRESTAPI';\n\nclass BGVideoSwitch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.state.switchBackgroundVideo(\n      this.state.videoURLs,\n      this.state.videoElement,\n      this.state.videoSource\n    );\n  }\n  toggleBGVideoSwitch(isVisible) {\n    document.getElementsByClassName(\n      'ctl__bgvideoswitch'\n    )[0].style.visibility = isVisible\n      ? 'visible'\n      : 'hidden';\n  }\n  state = {\n    videoURLs: [],\n    switchBackgroundVideo: {},\n    videoElement: {},\n    videoSource: {}\n  };\n\n  // $('[data-ctl=bgvideoswitch]')\n\n  componentDidMount() {\n    this.toggleBGVideoSwitch(false);\n    let appUrl = `${qryPostsFromLinksCategory}`;\n    let arrVideoURLs = ['/img/20181215_154218.mp4'];\n    fetch(appUrl)\n      .then(data => data.json())\n      .then(data => {\n        this.state.populateVideoURLArray(data);\n        this.state.switchBackgroundVideo(\n          this.state.videoURLs,\n          this.state.videoElement,\n          this.state.videoSource\n        );\n        this.toggleBGVideoSwitch(true);\n      });\n\n    this.setState({\n      videoURLs: arrVideoURLs,\n      videoElement: document.getElementsByClassName(\n        'video-background__video'\n      ),\n      videoSource: document.getElementsByClassName(\n        'video-background__video__source'\n      ),\n      switchBackgroundVideo: (arr, el_video, el_source) => {\n        let new_random_item = Math.floor(\n          Math.random() * arr.length\n        );\n        el_source[0].setAttribute(\n          'src',\n          arr[new_random_item]\n        );\n        el_video[0].load();\n      },\n      populateVideoURLArray: data => {\n        let videoURLArray = data\n          .filter(node => node.acf.type === 'video')\n          .sort((a, b) =>\n            a.acf.weight > b.acf.weight ? 1 : -1\n          )\n          .map((node, index) => {\n            return node.acf.href;\n          });\n        this.setState({\n          videoURLs: videoURLArray\n        });\n        //this.state.toggleBGVideoSwitch(true);\n      }\n    });\n  }\n  render() {\n    return (\n      <span\n        data-ctl=\"bgvideoswitch\"\n        className=\"ctl icon-video-camera ctl__bgvideoswitch\"\n        title=\"Switch Video Background\"\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default BGVideoSwitch;\n","import React, { Component } from 'react';\nimport Copyright from './Copyright';\nimport BGVideoSwitch from './BGVideoSwitch';\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className=\"nav\">\n        <Copyright />\n        <BGVideoSwitch />\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\nclass VideoBackground extends Component {\n  render() {\n    return (\n      <div className=\"video-background\">\n        <video\n          autoPlay\n          loop\n          className=\"video-background__video\"\n          muted\n          playsInline\n        >\n          <source\n            src=\"/img/20181215_154218.mp4\"\n            type=\"video/mp4\"\n            className=\"video-background__video__source\"\n          />\n        </video>\n      </div>\n    );\n  }\n}\n\nexport default VideoBackground;\n","import React, { Component } from \"react\";\nimport \"./styles/normalize.css\";\nimport \"./styles/App.scss\";\nimport ProjectLinksList from \"./components/ProjectLinksList\";\nimport SocialLinksList from \"./components/SocialLinksList\";\nimport MainImageGallery from \"./components/MainImageGallery\";\nimport KRMonogramSVG from \"./components/KRMonogramSVG\";\nimport NavBar from \"./components/NavBar\";\nimport VideoBackground from \"./components/VideoBackground\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoBackground />\n        <NavBar />\n        <KRMonogramSVG />\n        <div className=\"splash-container theme-light\">\n          <div className=\"front\">\n            <div className=\"brand-title\">\n              <h1>Keith Ratner</h1>\n            </div>\n            <ProjectLinksList />\n            <MainImageGallery\n              galleryTitle=\"Art\"\n              galleryDescription=\"All art is original, hand drawn, digitized, and for sale on my website.\"\n              thumbnailPosition=\"top\"\n            />\n            <SocialLinksList />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}